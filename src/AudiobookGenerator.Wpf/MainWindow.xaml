<Window x:Class="YewCone.AudiobookGenerator.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:YewCone.AudiobookGenerator.Wpf"
        xmlns:speech="clr-namespace:System.Speech.Synthesis;assembly=System.Speech"
        xmlns:core="clr-namespace:YewCone.AudiobookGenerator.Core;assembly=YewCone.AudiobookGenerator.Core"
        xmlns:viewModels="clr-namespace:YewCone.AudiobookGenerator.Wpf.ViewModels"
        mc:Ignorable="d"
        SizeToContent="Manual"
        ResizeMode="CanResize"
        Width="800"
        Height="580"
        d:DataContext="{d:DesignInstance viewModels:AudiobookGeneratorViewModel, IsDesignTimeCreatable=False}"
        Title="{x:Static local:Resources.AppName}"
        AllowDrop="True"
        DragOver="HandleDragOver"
        Drop="HandleDrop">
    <Window.Resources>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}" >
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>
        <DataTemplate DataType="{x:Type core:BookChapter}">
            <TextBlock Text="{Binding Name}" TextWrapping="Wrap" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type core:BookImage}">
            <TextBlock Text="{Binding FileName}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type speech:VoiceInfo}">
            <TextBlock>
                <Run Text="{Binding Name, Mode=OneTime}" />
                <Run Text="(" />
                <Run Text="{Binding Culture, Mode=OneTime}" />
                <Run Text=", " />
                <Run Text="{Binding Gender, Mode=OneTime}" />
                <Run Text=")" />
            </TextBlock>
        </DataTemplate>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>
    <Grid>
        <Button
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="Transparent"
            Visibility="{Binding ShowBookSelection, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
            Command="{Binding SelectBookCommand, Mode=OneTime}">
            <StackPanel
                Orientation="Vertical">
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                        Text="&#xE8FF;"
                        FontSize="50"/>
                    <TextBlock
                        HorizontalAlignment="Center"
                        Text="{x:Static local:Resources.BookPathPlaceholder}" />
                </StackPanel>
        </Button>
        <DockPanel
            Visibility="{Binding IsBookSelected, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
            Margin="10"
            LastChildFill="True" >
            <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                <Button DockPanel.Dock="Right" Margin="5 0" Command="{Binding SelectBookCommand, Mode=OneTime}">
                    <TextBlock>
                        <Run FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xEC50;" />
                        <Run Text="{x:Static local:Resources.ChangeBookLable}" />
                    </TextBlock>
                </Button>
                <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" TextWrapping="NoWrap" Text="{Binding Book.Path, Mode=OneWay}"/>
            </DockPanel>
            <DockPanel
                Margin="0 5"
                DockPanel.Dock="Bottom"
                LastChildFill="True">
                <Button DockPanel.Dock="Top" Style="{DynamicResource AccentButtonStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Right"
                        Command="{Binding GenerateCommand, Mode=OneTime}">
                    <TextBlock>
                            <Run Text="{x:Static local:Resources.GenerateLable}" />
                            <Run FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE90B;"/>
                    </TextBlock>
                </Button>
                <TextBlock DockPanel.Dock="Bottom"
                        Visibility="{Binding IsGenerating, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Text="{Binding ProgressMessage, Mode=OneWay}"/>
                <ProgressBar DockPanel.Dock="Bottom" Margin="5" HorizontalAlignment="Stretch"
                        Visibility="{Binding IsGenerating, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Value="{Binding ProgressPercentage, Mode=OneWay}" Maximum="100"/>
            </DockPanel>
            <DockPanel
                DockPanel.Dock="Bottom"
                LastChildFill="True">
                <TextBlock
                    Margin="5 0"
                    DockPanel.Dock="Right"
                    VerticalAlignment="Center">
                    <Hyperlink Command="{Binding ShowHowToAddVoiceCommand, Mode=OneTime}">
                        <Run Text="{x:Static local:Resources.AddVoiceLable}"/>
                    </Hyperlink>
                </TextBlock>
                <Button DockPanel.Dock="Right"
                    Command="{Binding PlayOrStopCommand, Mode=OneTime}" 
                    Visibility="{Binding IsVoiceSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}"
                        Text="{Binding PlayStopIcon, Mode=OneWay}"
                        ToolTip="{Binding PlayStopToolTip, Mode=OneWay}"/>
                </Button>
                <TextBlock
                    DockPanel.Dock="Left"
                    VerticalAlignment="Center"
                    Text="{x:Static local:Resources.SelectVoiceLable}"/>
                <ComboBox
                    DockPanel.Dock="Left"
                    Margin="5 0"
                    HorizontalAlignment="Stretch"
                    Text="{x:Static local:Resources.VoicePlaceholder}"
                    ItemsSource="{Binding Voices, Mode=OneTime}" SelectedItem="{Binding SelectedVoice}"/>
            </DockPanel>
            <TabControl
                Margin="0 5"
                DockPanel.Dock="Top">
                <TabItem Header="{Binding TextContentSectionHeader, Mode=OneWay}" >
                    <Grid Margin="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ListBox
                            Grid.Column="0"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ScrollViewer.VerticalScrollBarVisibility="Auto" 
                            ItemsSource="{Binding Book.Chapters}"
                            SelectedItem="{Binding Book.SelectedChapter}"/>
                        <GridSplitter Grid.Row="1" Width="5" VerticalAlignment="Stretch" />
                            <ScrollViewer
                                Grid.Column="2"
                                VerticalScrollBarVisibility="Auto"
                                HorizontalScrollBarVisibility="Disabled">
                                    <TextBox
                                        Text="{Binding Book.SelectedChapter.Content, Mode=TwoWay}"
                                        TextWrapping="Wrap" />
                            </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem Header="{Binding ImagesSectionHeader, Mode=OneWay}">
                    <DockPanel Margin="3">
                        <DockPanel DockPanel.Dock="Top">
                            <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Text="Cover Image"/>
                            <Button DockPanel.Dock="Right" Command="{Binding AddImageCommand, Mode=OneTime}" >
                                <TextBlock>
                                    <Run FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE710;"/>
                                    <Run Text="{x:Static local:Resources.AddImageLable}"/>
                                </TextBlock>
                            </Button>
                            <Button Margin="0 0 5 0"  DockPanel.Dock="Right" Command="{Binding SaveImageAsCommand, Mode=OneTime}" >
                                <TextBlock>
                                    <Run FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE78C;"/>
                                    <Run Text="{x:Static local:Resources.SaveImageAsLable}"/>
                                </TextBlock>
                            </Button>
                            <ComboBox Margin="5 0" ItemsSource="{Binding Book.Images}" SelectedItem="{Binding Book.Cover, Mode=TwoWay}"/>
                        </DockPanel>
                        <Image Source="{Binding Book.Cover.Content, Mode=OneWay}" Stretch="Uniform" />
                    </DockPanel>
                </TabItem>
                <TabItem Header="{x:Static local:Resources.DetailsSectionHeader}" >
                    <DataGrid 
                    Margin="3"
                    ItemsSource="{Binding Book.Properties, Mode=OneWay}"
                    AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Property" Width="*" Binding="{Binding Name, Mode=OneWay}" IsReadOnly="True" />
                            <DataGridTextColumn Header="Value" Width="*" Binding="{Binding Value}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
            </TabControl>
        </DockPanel>
    </Grid>
</Window>
